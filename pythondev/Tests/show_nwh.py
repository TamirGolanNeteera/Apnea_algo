import matplotlib.pyplot as plt
import matplotlib.colors as mcolors
import numpy as np
from Tests.vsms_db_api import *

db = DB()
col = list(mcolors.cnames.keys())


ec_smoothed = [[8674, 0.16], [8995, 0.04], [8580, 0.11], [9093, 0.09], [8998, 0.1], [9188, 0.02], [9003, 0.04], [6284, 0.04], [9100, 0.15], [8719, 0.13], [8757, 0.13], [8920, 0.02], [6651, 0.1], [9053, 0.06], [8735, 0.08], [8710, 0.25], [8584, 0.34], [8994, 0.3], [8579, 0.22], [9094, 0.45], [8999, 0.29], [9187, 0.07], [9002, 0.07], [9101, 0.12], [8724, 0.46], [8756, 0.82], [8919, 0.71], [6641, 0.13], [9050, 0.18]]
ec_og = [[8994, 0.61], [8674, 0.19], [8995, 0.06], [8580, 0.15], [9093, 0.1], [8998, 0.12], [9188, 0.03], [9003, 0.08], [6284, 0.06], [9100, 0.24], [8719, 0.16], [8757, 0.14], [8920, 0.03], [6651, 0.15], [9053, 0.09], [8735, 0.08], [8710, 0.46], [8584, 0.73], [8994, 0.61], [8579, 0.76], [9094, 0.91], [8999, 0.72], [9187, 0.14], [9002, 0.1], [9101, 0.43], [8724, 0.81], [8756, 0.98], [8919, 0.98], [6641, 0.22], [9050, 0.37]]
ec_hyst = [[8994, 0.27], [8674, 0.16], [8995, 0.03], [8580, 0.1],  [9093, 0.09], [8998, 0.11], [9188, 0.02], [9003, 0.06], [6284, 0.05], [9100, 0.16], [8719, 0.14], [8757, 0.13], [8920, 0.02], [6651, 0.1], [9053, 0.06], [8735, 0.08], [8710, 0.24], [8584, 0.32], [8579, 0.26], [9094, 0.63], [8999, 0.52], [9187, 0.09], [9002, 0.08], [9101, 0.21], [8724, 0.4], [8756, 0.78], [8919, 0.8], [6641, 0.13], [9050, 0.18]]
ec_hyst = [[8994, 0.31], [8674, 0.16], [8995, 0.04], [8580, 0.11], [9093, 0.09], [8998, 0.11], [9188, 0.02], [9003, 0.06], [6284, 0.05], [9100, 0.16], [8719, 0.14], [8757, 0.13], [8920, 0.02], [6651, 0.1], [9053, 0.06], [8735, 0.08], [8710, 0.25], [8584, 0.34], [8579, 0.28], [9094, 0.64], [8999, 0.53], [9187, 0.09], [9002, 0.08], [9101, 0.22], [8724, 0.44], [8756, 0.85], [8919, 0.85], [6641, 0.13], [9050, 0.18]]
ec_hyst = [[8994, 0.37], [8674, 0.15], [8995, 0.03], [8580, 0.12], [9093, 0.09], [8998, 0.11], [9188, 0.02], [9003, 0.05], [6284, 0.05], [9100, 0.17], [8719, 0.14], [8757, 0.13], [8920, 0.02], [6651, 0.1], [9053, 0.07], [8735, 0.08], [8710, 0.26], [8584, 0.35], [8579, 0.29], [9094, 0.62], [8999, 0.46], [9187, 0.09], [9002, 0.08], [9101, 0.18], [8724, 0.51], [8756, 0.9], [8919, 0.92], [6641, 0.14], [9050, 0.19]]
ec_hyst = [[8994, 0.27], [8674, 0.15], [8995, 0.03], [8580, 0.1], [9093, 0.09], [8998, 0.1], [9188, 0.02], [9003, 0.05], [6284, 0.04], [9100, 0.16], [8719, 0.13], [8757, 0.13], [8920, 0.02], [6651, 0.1], [9053, 0.06], [8735, 0.08], [8710, 0.24], [8584, 0.31], [8579, 0.25], [9094, 0.59], [8999, 0.43], [9187, 0.09], [9002, 0.08], [9101, 0.18], [8724, 0.37], [8756, 0.8], [8919, 0.8], [6641, 0.13], [9050, 0.17]]

ec_hyst = [[8994, 0.44], [8674, 0.17], [8995, 0.04], [8580, 0.12], [9093, 0.09], [8998, 0.11], [9188, 0.02], [9003, 0.06], [6284, 0.05], [9100, 0.19], [8719, 0.14], [8757, 0.14], [8920, 0.02], [6651, 0.11], [9053, 0.07], [8735, 0.08], [8710, 0.34], [8584, 0.48], [8579, 0.46], [9094, 0.69], [8999, 0.51], [9187, 0.11], [9002, 0.08], [9101, 0.2], [8724, 0.63], [8756, 0.94], [8919, 0.94], [6641, 0.17], [9050, 0.25]]
ec_hyst = [[8994, 0.42], [8674, 0.16], [8995, 0.04], [8580, 0.12], [9093, 0.09], [8998, 0.11], [9188, 0.02], [9003, 0.06], [6284, 0.05], [9100, 0.17], [8719, 0.14], [8757, 0.13], [8920, 0.02], [6651, 0.1],  [9053, 0.07], [8735, 0.08], [8710, 0.32], [8584, 0.43], [8579, 0.44], [9094, 0.67], [8999, 0.49], [9187, 0.09], [9002, 0.08], [9101, 0.2], [8724, 0.59], [8756, 0.93], [8919, 0.94], [6641, 0.16], [9050, 0.23]]
ec_hyst = [[8994, 0.23], [8674, 0.14], [8995, 0.03], [8580, 0.1],  [9093, 0.08], [8998, 0.1],  [9188, 0.02], [9003, 0.05], [6284, 0.04], [9100, 0.15], [8719, 0.13], [8757, 0.13], [8920, 0.02], [6651, 0.09], [9053, 0.06], [8735, 0.08], [8710, 0.2],  [8584, 0.26], [8579, 0.24], [9094, 0.57], [8999, 0.42], [9187, 0.08], [9002, 0.07], [9101, 0.17], [8724, 0.29], [8756, 0.71], [8919, 0.79], [6641, 0.12], [9050, 0.17]]
ec_hyst = [[8994, 0.26], [8674, 0.15], [8995, 0.03], [8580, 0.1], [9093, 0.09], [8998, 0.1], [9188, 0.02], [9003, 0.05], [6284, 0.04], [9100, 0.15], [8719, 0.13], [8757, 0.13], [8920, 0.02], [6651, 0.1], [9053, 0.06], [8735, 0.08], [8710, 0.23], [8584, 0.3], [8579, 0.25], [9094, 0.58], [8999, 0.43], [9187, 0.09], [9002, 0.08], [9101, 0.18], [8724, 0.35], [8756, 0.79], [8919, 0.79], [6641, 0.13], [9050, 0.17]]
ec_hyst = [[8757, 0.15], [8994, 0.27], [8674, 0.17], [8995, 0.05], [8580, 0.12], [9093, 0.1], [8998, 0.12], [9188, 0.03], [9003, 0.08], [6284, 0.05], [9100, 0.17], [8719, 0.15], [8920, 0.03], [6651, 0.12], [9053, 0.08], [8735, 0.08], [8710, 0.31], [8584, 0.39], [8579, 0.29], [9094, 0.74], [8999, 0.61], [9187, 0.11], [9002, 0.08], [9101, 0.35], [8724, 0.45], [8756, 0.87], [8919, 0.8], [6641, 0.16], [9050, 0.22]]
ec_hyst =[[8757, 0.14], [8994, 0.25], [8674, 0.16], [8995, 0.04], [8580, 0.11], [9093, 0.09], [8998, 0.11], [9188, 0.02], [9003, 0.07], [6284, 0.05], [9100, 0.16], [8719, 0.14], [8920, 0.03], [6651, 0.11], [9053, 0.07], [8735, 0.08], [8710, 0.26], [8584, 0.34], [8579, 0.27], [9094, 0.68], [8999, 0.53], [9187, 0.09], [9002, 0.08], [9101, 0.32], [8724, 0.4], [8756, 0.84], [8919, 0.78], [6641, 0.14], [9050, 0.2]]
ec_hyst =[[8757, 0.14], [8994, 0.25], [8674, 0.17], [8995, 0.04], [8580, 0.11], [9093, 0.1], [8998, 0.11], [9188, 0.03], [9003, 0.06], [6284, 0.05], [9100, 0.16], [8719, 0.14], [8920, 0.03], [6651, 0.11], [9053, 0.07], [8735, 0.08], [8710, 0.23], [8584, 0.35], [8579, 0.28], [9094, 0.73], [8999, 0.56], [9187, 0.11], [9002, 0.08], [9101, 0.32], [8724, 0.44], [8756, 0.84], [8919, 0.83], [6641, 0.16], [9050, 0.2]]
ec_og = [[8994, 0.66], [8757, 0.01], [8994, 0.66], [8674, 0.14], [8995, 0.22], [8580, 0.2], [9093, 0.04], [8998, 0.14], [9188, 0.23], [9003, 0.57], [6284, 0.08], [9100, 0.54], [8719, 0.18], [8920, 0.0], [6651, 0.18], [9053, 0.11], [8735, 0.01], [8710, 0.28], [8584, 0.54], [8579, 0.67], [9094, 0.3], [8999, 0.39], [9187, 0.67], [9002, 0.58], [9101, 0.42], [8724, 0.46], [8756, 0.13], [8919, 0.19], [6641, 0.2], [9050, 0.4]]
ec_hyst =[[8757, 0.02], [8994, 0.7], [8674, 0.16], [8995, 0.31], [8580, 0.25], [9093, 0.05], [8998, 0.22], [9188, 0.32], [9003, 0.65], [6284, 0.12], [9100, 0.62], [8719, 0.28], [8920, 0.0], [6651, 0.29], [9053, 0.16], [8735, 0.03], [8710, 0.36], [8584, 0.58], [8579, 0.67], [9094, 0.25], [8999, 0.39], [9187, 0.71], [9002, 0.65], [9101, 0.47], [8724, 0.46], [8756, 0.14], [8919, 0.15], [6641, 0.3], [9050, 0.49]]
ec_og =  [[8994, 0.25, 0.66, 0.08], [8757, 0.14, 0.01, 0.84], [8994, 0.25, 0.66, 0.08], [8674, 0.16, 0.14, 0.68], [8995, 0.04, 0.22, 0.72], [8580, 0.11, 0.2,  0.68], [9093, 0.09, 0.04, 0.83], [8998, 0.11, 0.14, 0.73], [9188, 0.02, 0.23, 0.67], [9003, 0.07, 0.57, 0.34], [6284, 0.05, 0.08, 0.86], [9100, 0.16, 0.54, 0.3], [8719, 0.14, 0.18, 0.64], [8920, 0.03, 0.0, 0.96], [6651, 0.11, 0.18, 0.68], [9053, 0.07, 0.11, 0.8], [8735, 0.08, 0.01, 0.89], [8710, 0.26, 0.28, 0.43], [8584, 0.34, 0.54, 0.1], [8579, 0.27, 0.67, 0.05], [9094, 0.68, 0.3, 0.02], [8999, 0.53, 0.39, 0.07], [9187, 0.09, 0.67, 0.23], [9002, 0.08, 0.58, 0.33], [9101, 0.32, 0.42, 0.24], [8724, 0.4, 0.46, 0.13], [8756, 0.84, 0.13, 0.02], [8919, 0.78, 0.19, 0.02], [6641, 0.14, 0.2, 0.63], [9050, 0.2, 0.4, 0.38]]
eg_3 =   [[8994, 0.27, 0.46, 0.27], [8757, 0.14, 0.01, 0.84], [8994, 0.27, 0.46, 0.27], [8674, 0.17, 0.12, 0.68], [8995, 0.04, 0.22, 0.72], [8580, 0.11, 0.1, 0.78], [9093, 0.1, 0.04, 0.82], [8998, 0.11, 0.15, 0.72], [9188, 0.03, 0.31, 0.57], [9003, 0.07, 0.48, 0.43], [6284, 0.05, 0.09, 0.84], [9100, 0.16, 0.41, 0.43], [8719, 0.14, 0.25, 0.57], [8920, 0.03, 0.0, 0.96], [6651, 0.11, 0.26, 0.6], [9053, 0.07, 0.14, 0.77], [8735, 0.08, 0.03, 0.87], [8710, 0.23, 0.24, 0.51], [8584, 0.35, 0.49, 0.14], [8579, 0.29, 0.36, 0.33], [9094, 0.75, 0.19, 0.05], [8999, 0.57, 0.3, 0.12], [9187, 0.11, 0.63, 0.26], [9002, 0.08, 0.47, 0.44], [9101, 0.34, 0.26, 0.39], [8724, 0.46, 0.33, 0.2], [8756, 0.86, 0.08, 0.05], [8919, 0.83, 0.13, 0.03], [6641, 0.16, 0.28, 0.54], [9050, 0.2, 0.42, 0.36]]

print(len(ec_og), len(ec_hyst))

d = {}
for i, s in enumerate(ec_hyst):
    if s[0] not in d.keys():
        d[s[0]] = []
    d[s[0]].append(s[1])

print(d)
for i, s in enumerate(ec_og):
    if s[0] not in d.keys():
        d[s[0]] = []
    d[s[0]].append(s[1])

from collections import OrderedDict


d = OrderedDict(sorted(d.items()))
print(d)

i = 0
m_before = 0
m_after = 0
count = 0
for k,v in d.items():
    if k in db.setup_nwh_benchmark():
        continue
    if len(v) < 2:
        print(k, v)
    else:
        x1 = [i, i]
        x2 = [v[0], v[1]]
        plt.plot(x1,x2, c='grey', marker=None, alpha=0.5)
        plt.scatter(i, v[0], c='green', s=8)
        plt.scatter(i, v[1], c='red', s=8)


        m_before+=v[1]
        m_after+=v[0]
        count+=1

        plt.text(i, v[1], str(k)+' '+str(v[1]))
        plt.text(i, v[0], str(v[0]))

    i += 1
m_before/=count
m_after/=count
plt.title("NWH non-benchmark empty reduction "+ str(np.round(m_before, 2))+ " to "+ str(np.round(m_after, 2)))
plt.legend()
plt.show()